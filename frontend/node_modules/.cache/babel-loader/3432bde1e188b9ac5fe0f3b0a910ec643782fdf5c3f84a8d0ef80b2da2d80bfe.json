{"ast":null,"code":"var _jsxFileName = \"/home/maundu/Documents/Project/mnada-auctions-prototype1/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\"; // You can remove this if it's not being used\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setUserRole\n}) => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Mock credentials\n    const mockUsers = [{\n      username: \"admin\",\n      password: \"admin123\",\n      role: \"admin\"\n    }, {\n      username: \"auctioneer\",\n      password: \"auction123\",\n      role: \"auctioneer\"\n    }, {\n      username: \"client\",\n      password: \"client123\",\n      role: \"client\"\n    }];\n\n    // Find the matching user\n    const user = mockUsers.find(user => user.username === username && user.password === password);\n    if (user) {\n      // Store the JWT token and user role in localStorage\n      localStorage.setItem(\"access_token\", \"mock-jwt-token\");\n      localStorage.setItem(\"role\", user.role);\n\n      // Set the user role in the app state\n      setUserRole(user.role);\n\n      // Redirect user to their dashboard\n      alert(\"Login Successful!\");\n    } else {\n      alert(\"Login Failed: Invalid credentials\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"bg-white p-6 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\",\n        className: \"block w-full p-2 border border-gray-300 rounded mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        className: \"block w-full p-2 border border-gray-300 rounded mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-500 text-white p-2 rounded\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","Login","setUserRole","_s","username","setUsername","password","setPassword","handleLogin","e","preventDefault","mockUsers","role","user","find","localStorage","setItem","alert","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/maundu/Documents/Project/mnada-auctions-prototype1/src/components/Login.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\"; // You can remove this if it's not being used\n\nconst Login = ({ setUserRole }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    // Mock credentials\n    const mockUsers = [\n      { username: \"admin\", password: \"admin123\", role: \"admin\" },\n      { username: \"auctioneer\", password: \"auction123\", role: \"auctioneer\" },\n      { username: \"client\", password: \"client123\", role: \"client\" },\n    ];\n\n    // Find the matching user\n    const user = mockUsers.find(\n      (user) => user.username === username && user.password === password\n    );\n\n    if (user) {\n      // Store the JWT token and user role in localStorage\n      localStorage.setItem(\"access_token\", \"mock-jwt-token\");\n      localStorage.setItem(\"role\", user.role);\n\n      // Set the user role in the app state\n      setUserRole(user.role);\n\n      // Redirect user to their dashboard\n      alert(\"Login Successful!\");\n    } else {\n      alert(\"Login Failed: Invalid credentials\");\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto\">\n      <form onSubmit={handleLogin} className=\"bg-white p-6 rounded-lg shadow-md\">\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          placeholder=\"Username\"\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\n        />\n        <button type=\"submit\" className=\"w-full bg-blue-500 text-white p-2 rounded\">\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,SAAS,GAAG,CAChB;MAAEP,QAAQ,EAAE,OAAO;MAAEE,QAAQ,EAAE,UAAU;MAAEM,IAAI,EAAE;IAAQ,CAAC,EAC1D;MAAER,QAAQ,EAAE,YAAY;MAAEE,QAAQ,EAAE,YAAY;MAAEM,IAAI,EAAE;IAAa,CAAC,EACtE;MAAER,QAAQ,EAAE,QAAQ;MAAEE,QAAQ,EAAE,WAAW;MAAEM,IAAI,EAAE;IAAS,CAAC,CAC9D;;IAED;IACA,MAAMC,IAAI,GAAGF,SAAS,CAACG,IAAI,CACxBD,IAAI,IAAKA,IAAI,CAACT,QAAQ,KAAKA,QAAQ,IAAIS,IAAI,CAACP,QAAQ,KAAKA,QAC5D,CAAC;IAED,IAAIO,IAAI,EAAE;MACR;MACAE,YAAY,CAACC,OAAO,CAAC,cAAc,EAAE,gBAAgB,CAAC;MACtDD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,IAAI,CAACD,IAAI,CAAC;;MAEvC;MACAV,WAAW,CAACW,IAAI,CAACD,IAAI,CAAC;;MAEtB;MACAK,KAAK,CAAC,mBAAmB,CAAC;IAC5B,CAAC,MAAM;MACLA,KAAK,CAAC,mCAAmC,CAAC;IAC5C;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BnB,OAAA;MAAMoB,QAAQ,EAAEZ,WAAY;MAACU,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBACxEnB,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAElB,QAAS;QAChBmB,QAAQ,EAAGd,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC,UAAU;QACtBP,SAAS,EAAC;MAAsD;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACF7B,OAAA;QACEqB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEhB,QAAS;QAChBiB,QAAQ,EAAGd,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC,UAAU;QACtBP,SAAS,EAAC;MAAsD;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eACF7B,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACH,SAAS,EAAC,2CAA2C;QAAAC,QAAA,EAAC;MAE5E;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAzDIF,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AA2DX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}