{"ast":null,"code":"import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Registration=()=>{const[username,setUsername]=useState(\"\");const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[role,setRole]=useState(\"client\");// Default role is \"client\"\nconst[loading,setLoading]=useState(false);// Track loading state\nconst[error,setError]=useState(\"\");// Track error message\nconst[successMessage,setSuccessMessage]=useState(\"\");// Track success message\nconst navigate=useNavigate();const handleRegister=async e=>{e.preventDefault();setLoading(true);setError(\"\");// Reset error before submitting\nsetSuccessMessage(\"\");// Reset success message before submitting\n// Basic form validation\nif(!username||!email||!password){setError(\"All fields are required.\");setLoading(false);return;}// Mock registration process\nconst mockDatabase=[{username:\"admin\",email:\"admin@example.com\",password:\"admin123\",role:\"admin\"},{username:\"auctioneer\",email:\"auctioneer@example.com\",password:\"auction123\",role:\"auctioneer\"},{username:\"client\",email:\"client@example.com\",password:\"client123\",role:\"client\"}];try{// Check if username or email already exists in the mock database\nconst existingUser=mockDatabase.find(user=>user.username===username||user.email===email);if(existingUser){setError(\"Username or email already exists.\");setLoading(false);return;}// Check if an admin already exists in the mock database\nconst existingAdmin=mockDatabase.find(user=>user.role===\"admin\");if(role===\"admin\"&&existingAdmin){setError(\"An admin already exists. Only one admin is allowed.\");setLoading(false);return;}// If no existing user or admin, simulate successful registration\nmockDatabase.push({username,email,password,role});// Simulate a successful registration by storing the mock user\nlocalStorage.setItem(\"newUser\",JSON.stringify({username,email,role}));// Set success message and redirect after a short delay\nsetSuccessMessage(\"Registration Successful! Redirecting to login...\");setTimeout(()=>{navigate(\"/login\");},2000);// Redirect after 2 seconds\n}catch(error){setError(\"Registration Failed! Please try again.\");// Display error message\n}finally{setLoading(false);// Reset loading state\n}};return/*#__PURE__*/_jsx(\"div\",{className:\"max-w-md mx-auto\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRegister,className:\"bg-white p-6 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-4\",children:\"Create an Account\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"text-red-500 text-sm mb-4\",children:error}),successMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"text-green-500 text-sm mb-4\",children:successMessage}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),placeholder:\"Username\",className:\"block w-full p-2 border border-gray-300 rounded mb-4\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"Email\",className:\"block w-full p-2 border border-gray-300 rounded mb-4\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Password\",className:\"block w-full p-2 border border-gray-300 rounded mb-4\"}),/*#__PURE__*/_jsxs(\"select\",{value:role,onChange:e=>setRole(e.target.value),className:\"block w-full p-2 border border-gray-300 rounded mb-4\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"client\",children:\"Client\"}),/*#__PURE__*/_jsx(\"option\",{value:\"auctioneer\",children:\"Auctioneer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"admin\",children:\"Admin\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full bg-blue-500 text-white p-2 rounded\",disabled:loading// Disable button while loading\n,children:loading?\"Registering...\":\"Register\"})]})});};export default Registration;","map":{"version":3,"names":["useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Registration","username","setUsername","email","setEmail","password","setPassword","role","setRole","loading","setLoading","error","setError","successMessage","setSuccessMessage","navigate","handleRegister","e","preventDefault","mockDatabase","existingUser","find","user","existingAdmin","push","localStorage","setItem","JSON","stringify","setTimeout","className","children","onSubmit","type","value","onChange","target","placeholder","disabled"],"sources":["C:/Users/Baraka/Desktop/Phase 4/mnada-auctions/frontend/src/components/Registration.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Registration = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"client\"); // Default role is \"client\"\r\n  const [loading, setLoading] = useState(false); // Track loading state\r\n  const [error, setError] = useState(\"\"); // Track error message\r\n  const [successMessage, setSuccessMessage] = useState(\"\"); // Track success message\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\"); // Reset error before submitting\r\n    setSuccessMessage(\"\"); // Reset success message before submitting\r\n\r\n    // Basic form validation\r\n    if (!username || !email || !password) {\r\n      setError(\"All fields are required.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Mock registration process\r\n    const mockDatabase = [\r\n      { username: \"admin\", email: \"admin@example.com\", password: \"admin123\", role: \"admin\" },\r\n      { username: \"auctioneer\", email: \"auctioneer@example.com\", password: \"auction123\", role: \"auctioneer\" },\r\n      { username: \"client\", email: \"client@example.com\", password: \"client123\", role: \"client\" },\r\n    ];\r\n\r\n    try {\r\n      // Check if username or email already exists in the mock database\r\n      const existingUser = mockDatabase.find(\r\n        (user) => user.username === username || user.email === email\r\n      );\r\n\r\n      if (existingUser) {\r\n        setError(\"Username or email already exists.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Check if an admin already exists in the mock database\r\n      const existingAdmin = mockDatabase.find((user) => user.role === \"admin\");\r\n\r\n      if (role === \"admin\" && existingAdmin) {\r\n        setError(\"An admin already exists. Only one admin is allowed.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // If no existing user or admin, simulate successful registration\r\n      mockDatabase.push({ username, email, password, role });\r\n\r\n      // Simulate a successful registration by storing the mock user\r\n      localStorage.setItem(\"newUser\", JSON.stringify({ username, email, role }));\r\n\r\n      // Set success message and redirect after a short delay\r\n      setSuccessMessage(\"Registration Successful! Redirecting to login...\");\r\n      setTimeout(() => {\r\n        navigate(\"/login\");\r\n      }, 2000); // Redirect after 2 seconds\r\n\r\n    } catch (error) {\r\n      setError(\"Registration Failed! Please try again.\"); // Display error message\r\n    } finally {\r\n      setLoading(false); // Reset loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto\">\r\n      <form onSubmit={handleRegister} className=\"bg-white p-6 rounded-lg shadow-md\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Create an Account</h2>\r\n\r\n        {/* Show error message if there's any */}\r\n        {error && <div className=\"text-red-500 text-sm mb-4\">{error}</div>}\r\n\r\n        {/* Show success message if registration is successful */}\r\n        {successMessage && <div className=\"text-green-500 text-sm mb-4\">{successMessage}</div>}\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Username\"\r\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\r\n        />\r\n        <select\r\n          value={role}\r\n          onChange={(e) => setRole(e.target.value)}\r\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\r\n        >\r\n          <option value=\"client\">Client</option>\r\n          <option value=\"auctioneer\">Auctioneer</option>\r\n          <option value=\"admin\">Admin</option>\r\n        </select>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-blue-500 text-white p-2 rounded\"\r\n          disabled={loading} // Disable button while loading\r\n        >\r\n          {loading ? \"Registering...\" : \"Register\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}