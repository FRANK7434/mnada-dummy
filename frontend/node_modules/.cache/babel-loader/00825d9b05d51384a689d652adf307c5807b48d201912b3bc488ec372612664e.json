{"ast":null,"code":"var _jsxFileName = \"/home/maundu/Documents/Project/mnada-auctions-prototype1/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [error, setError] = useState(\"\"); // Track error message\n  const navigate = useNavigate(); // Hook to navigate after login\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\"); // Clear previous errors\n\n    // Mock users data for testing\n    const mockUsers = [{\n      username: \"admin\",\n      password: \"admin123\",\n      role: \"admin\"\n    }, {\n      username: \"auctioneer\",\n      password: \"auction123\",\n      role: \"auctioneer\"\n    }, {\n      username: \"client\",\n      password: \"client123\",\n      role: \"client\"\n    }];\n    try {\n      // Simulate checking for valid username and password\n      const user = mockUsers.find(user => user.username === username && user.password === password);\n      if (user) {\n        // Simulate a successful login by storing role and a mock token\n        localStorage.setItem(\"access_token\", \"mock-jwt-token\");\n        localStorage.setItem(\"role\", user.role);\n\n        // Redirect to the dashboard after successful login\n        navigate(\"/dashboard\");\n      } else {\n        // Handle invalid login credentials\n        setError(\"Invalid username or password\");\n      }\n    } catch (error) {\n      // Display a generic error message for any other issues\n      setError(\"An error occurred. Please try again later.\");\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"bg-white p-6 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\",\n        className: \"block w-full p-2 border border-gray-300 rounded mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        className: \"block w-full p-2 border border-gray-300 rounded mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-sm mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-500 text-white p-2 rounded\",\n        disabled: loading // Disable button when loading\n        ,\n        children: [loading ? \"Logging in...\" : \"Login\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"/rDwB1Fi6lu1XkgBaxiJuy3TFKo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","loading","setLoading","error","setError","navigate","handleLogin","e","preventDefault","mockUsers","role","user","find","localStorage","setItem","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/home/maundu/Documents/Project/mnada-auctions-prototype1/src/components/Login.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [error, setError] = useState(\"\"); // Track error message\n  const navigate = useNavigate(); // Hook to navigate after login\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\"); // Clear previous errors\n\n    // Mock users data for testing\n    const mockUsers = [\n      { username: \"admin\", password: \"admin123\", role: \"admin\" },\n      { username: \"auctioneer\", password: \"auction123\", role: \"auctioneer\" },\n      { username: \"client\", password: \"client123\", role: \"client\" },\n    ];\n\n    try {\n      // Simulate checking for valid username and password\n      const user = mockUsers.find(\n        (user) => user.username === username && user.password === password\n      );\n\n      if (user) {\n        // Simulate a successful login by storing role and a mock token\n        localStorage.setItem(\"access_token\", \"mock-jwt-token\");\n        localStorage.setItem(\"role\", user.role);\n\n        // Redirect to the dashboard after successful login\n        navigate(\"/dashboard\");\n      } else {\n        // Handle invalid login credentials\n        setError(\"Invalid username or password\");\n      }\n    } catch (error) {\n      // Display a generic error message for any other issues\n      setError(\"An error occurred. Please try again later.\");\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto\">\n      <form onSubmit={handleLogin} className=\"bg-white p-6 rounded-lg shadow-md\">\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          placeholder=\"Username\"\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\n        />\n        {error && <p className=\"text-red-500 text-sm mb-4\">{error}</p>} {/* Display error message */}\n        <button\n          type=\"submit\"\n          className=\"w-full bg-blue-500 text-white p-2 rounded\"\n          disabled={loading} // Disable button when loading\n        >\n          {loading ? \"Logging in...\" : \"Login\"} {/* Show loading text */}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}