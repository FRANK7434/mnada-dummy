{"ast":null,"code":"var _jsxFileName = \"/home/maundu/Documents/Moringa school/Project/mnada-auctions/frontend/src/components/Registration.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"client\"); // Default role is \"client\"\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [error, setError] = useState(\"\"); // Track error message\n  const navigate = useNavigate();\n  const handleRegister = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\"); // Reset error before submitting\n\n    // Mock registration process\n    const mockDatabase = [{\n      username: \"admin\",\n      email: \"admin@example.com\",\n      password: \"admin123\",\n      role: \"admin\"\n    }, {\n      username: \"auctioneer\",\n      email: \"auctioneer@example.com\",\n      password: \"auction123\",\n      role: \"auctioneer\"\n    }, {\n      username: \"client\",\n      email: \"client@example.com\",\n      password: \"client123\",\n      role: \"client\"\n    }];\n    try {\n      // Check if username or email already exists in the mock database\n      const existingUser = mockDatabase.find(user => user.username === username || user.email === email);\n      if (existingUser) {\n        setError(\"Username or email already exists.\");\n        setLoading(false);\n        return;\n      }\n\n      // Check if an admin already exists in the mock database\n      const existingAdmin = mockDatabase.find(user => user.role === \"admin\");\n      if (role === \"admin\" && existingAdmin) {\n        setError(\"An admin already exists. Only one admin is allowed.\");\n        setLoading(false);\n        return;\n      }\n\n      // If no existing user or admin, simulate successful registration\n      mockDatabase.push({\n        username,\n        email,\n        password,\n        role\n      });\n\n      // Simulate a successful registration by storing the mock user\n      localStorage.setItem(\"newUser\", JSON.stringify({\n        username,\n        email,\n        role\n      }));\n\n      // Alert and redirect to login page after successful registration\n      alert(\"Registration Successful!\");\n      navigate(\"/login\");\n    } catch (error) {\n      setError(\"Registration Failed! Please try again.\"); // Display error message\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      className: \"bg-white p-6 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-sm mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\",\n        className: \"block w-full p-2 border border-gray-300 rounded mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\",\n        className: \"block w-full p-2 border border-gray-300 rounded mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        className: \"block w-full p-2 border border-gray-300 rounded mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: role,\n        onChange: e => setRole(e.target.value),\n        className: \"block w-full p-2 border border-gray-300 rounded mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"client\",\n          children: \"Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"auctioneer\",\n          children: \"Auctioneer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-500 text-white p-2 rounded\",\n        disabled: loading // Disable button while loading\n        ,\n        children: loading ? \"Registering...\" : \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"dlaRUDR+nbFVxGsuj4pwp6ddOco=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Registration","_s","username","setUsername","email","setEmail","password","setPassword","role","setRole","loading","setLoading","error","setError","navigate","handleRegister","e","preventDefault","mockDatabase","existingUser","find","user","existingAdmin","push","localStorage","setItem","JSON","stringify","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/maundu/Documents/Moringa school/Project/mnada-auctions/frontend/src/components/Registration.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Registration = () => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"client\"); // Default role is \"client\"\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [error, setError] = useState(\"\"); // Track error message\n  const navigate = useNavigate();\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\"); // Reset error before submitting\n\n    // Mock registration process\n    const mockDatabase = [\n      { username: \"admin\", email: \"admin@example.com\", password: \"admin123\", role: \"admin\" },\n      { username: \"auctioneer\", email: \"auctioneer@example.com\", password: \"auction123\", role: \"auctioneer\" },\n      { username: \"client\", email: \"client@example.com\", password: \"client123\", role: \"client\" },\n    ];\n\n    try {\n      // Check if username or email already exists in the mock database\n      const existingUser = mockDatabase.find(\n        (user) => user.username === username || user.email === email\n      );\n\n      if (existingUser) {\n        setError(\"Username or email already exists.\");\n        setLoading(false);\n        return;\n      }\n\n      // Check if an admin already exists in the mock database\n      const existingAdmin = mockDatabase.find((user) => user.role === \"admin\");\n\n      if (role === \"admin\" && existingAdmin) {\n        setError(\"An admin already exists. Only one admin is allowed.\");\n        setLoading(false);\n        return;\n      }\n\n      // If no existing user or admin, simulate successful registration\n      mockDatabase.push({ username, email, password, role });\n\n      // Simulate a successful registration by storing the mock user\n      localStorage.setItem(\"newUser\", JSON.stringify({ username, email, role }));\n\n      // Alert and redirect to login page after successful registration\n      alert(\"Registration Successful!\");\n      navigate(\"/login\");\n    } catch (error) {\n      setError(\"Registration Failed! Please try again.\"); // Display error message\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto\">\n      <form onSubmit={handleRegister} className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h2 className=\"text-2xl font-bold mb-4\">Create an Account</h2>\n\n        {/* Show error message if there's any */}\n        {error && <div className=\"text-red-500 text-sm mb-4\">{error}</div>}\n\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          placeholder=\"Username\"\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\n        />\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\n        />\n        <select\n          value={role}\n          onChange={(e) => setRole(e.target.value)}\n          className=\"block w-full p-2 border border-gray-300 rounded mb-4\"\n        >\n          <option value=\"client\">Client</option>\n          <option value=\"auctioneer\">Auctioneer</option>\n          <option value=\"admin\">Admin</option>\n        </select>\n\n        <button\n          type=\"submit\"\n          className=\"w-full bg-blue-500 text-white p-2 rounded\"\n          disabled={loading} // Disable button while loading\n        >\n          {loading ? \"Registering...\" : \"Register\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Registration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}